/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import static java.lang.Thread.sleep;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import static proyecto2.Proyecto2.Login;
import static proyecto2.Proyecto2.Tabla_francisco;
import static proyecto2.Proyecto2.Tabla_hash;
import static proyecto2.Proyecto2.tamanio_hash;
import static proyecto2.Registrar.cambiar;
import static proyecto2.Registrar.tam;

/**
 *
 * @author Davis
 */
public class PantallaUsuario extends javax.swing.JFrame {

    /**
     * Creates new form PantallaUsuario
     */
    public PantallaUsuario() {
        initComponents();
        this.setLocationRelativeTo(null);
        Border bordejpanel = new TitledBorder(new EtchedBorder(), "Carpetas");
        jPanel1.setBorder(bordejpanel);
        Border bordejpane2 = new TitledBorder(new EtchedBorder(), "Archivos");
        jPanel2.setBorder(bordejpane2);
        Border bordejpane3 = new TitledBorder(new EtchedBorder(), "Reportes");
        jPanel3.setBorder(bordejpane3);
        Border bordejpane4 = new TitledBorder(new EtchedBorder(), "Administrador");
        jPanel4.setBorder(bordejpane4);
        jLabel1.setText(Tabla_hash.get(Login).getUser());
        if(Tabla_hash.get(Login).getModelo()!=null){
        jTree1.setModel(Tabla_hash.get(Login).getModelo());
        //---------------------------------
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Welcome");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setText("Crear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Subir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jButton5.setText("Crear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Modificar");

        jButton7.setText("Eliminar");

        jButton8.setText("Carga masiva");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7)
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton9.setText("Cerrar Sesion");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("/");
        jTree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("/");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jButton10.setText("Grafo");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Matriz");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Arbol Avl");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10)
                    .addComponent(jButton11)
                    .addComponent(jButton12))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton10)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addGap(18, 18, 18)
                .addComponent(jButton12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jButton13.setText("Carga Masiva Usuarios");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setText("Tabla Hash");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Bitacora");

        jButton16.setText("Usuarios Con Error");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton16))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton15)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13)
                    .addComponent(jButton16))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jButton15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(106, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Tabla_hash.get(Login).setModelo(jTree1.getModel());
        Inicio v = new Inicio();
        v.show();
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        TreeSelectionModel smd = jTree1.getSelectionModel();
        if(smd.getSelectionCount() > 0){
            DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
            selectNodo = selectedNode;
            jLabel2.setText(selectedNode.getUserObject().toString());
            SelectActual=selectedNode.getUserObject().toString();
            String separado[];
            separado = SelectActual.split("");
            boolean arch = true;
            for(int i=0;i<separado.length;i++){
            if(separado[i].equalsIgnoreCase(".")){
            arch=false;
            }
            }
            jButton5.setEnabled(arch);
            jButton6.setEnabled(arch);
            jButton7.setEnabled(arch);
            jButton8.setEnabled(arch);
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTree1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String test= JOptionPane.showInputDialog("Ingrese nombre: ");
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(test);
        selectedNode.add(newNode);
        int j=0;
        for(int i =0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre()==null){
        Tabla_hash.get(Login).getCarpetas().get(0).get(i).setNombre(test);
        Tabla_hash.get(Login).getCarpetas().get(i).get(0).setNombre(test);
        Tabla_hash.get(Login).getCarpetas().get(i).get(0).setPadre(SelectActual);
        j=i;
        break;
        }
        }
        for(int i =0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre().equalsIgnoreCase(SelectActual)){
        Tabla_hash.get(Login).getCarpetas().get(i).get(j).setNombre(SelectActual+"/"+test);
        break;
        }
        }
        // reload jtree model
        DefaultTreeModel model = (DefaultTreeModel)jTree1.getModel();
        model.reload();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String actual2="";
        String test= JOptionPane.showInputDialog("Ingrese nuevo nombre: ");
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        selectedNode.setUserObject(test);
        //------------------------------
        int j=0;
        for(int i =0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre().equalsIgnoreCase(SelectActual)){
        Tabla_hash.get(Login).getCarpetas().get(0).get(i).setNombre(test);
        Tabla_hash.get(Login).getCarpetas().get(i).get(0).setNombre(test);
        actual2 = Tabla_hash.get(Login).getCarpetas().get(i).get(0).getPadre();
        j=i;
        break;
        }
        }
        for(int i=0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre().equalsIgnoreCase(actual2)){
        Tabla_hash.get(Login).getCarpetas().get(i).get(j).setNombre(actual2+"/"+test);
        break;
        }
        }
        // reload jtree model
        DefaultTreeModel model = (DefaultTreeModel)jTree1.getModel();
        model.reload();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        
        if(selectedNode != jTree1.getModel().getRoot())
        {
            DefaultTreeModel model = (DefaultTreeModel)jTree1.getModel();

            model.removeNodeFromParent(selectedNode);

            model.reload();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    for(int i=0;i<10;i++){
    for(int j=0;j<10;j++){
    System.out.print(Tabla_hash.get(Login).getCarpetas().get(i).get(j).getNombre()+"->");
    }
    System.out.println();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
    JFileChooser file1=new JFileChooser();
    file1.showOpenDialog(this);
    File file = file1.getSelectedFile(); 
    String select = file.getAbsolutePath();
    
        try {
            leer(select);
            for(int i=0; i<Titulo.size();i++){
            insertar(Titulo.get(i),Contenido.get(i));
            }
        } catch (IOException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CsvValidationException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String test= JOptionPane.showInputDialog("Ingrese nombre del archivo: ");
        String cont= JOptionPane.showInputDialog("Ingrese contenido del archivo: ");
        String fecha = fecha();
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(test);
        selectedNode.add(newNode);
        for(int i =0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre().equalsIgnoreCase(SelectActual)){
        Tabla_hash.get(Login).getCarpetas().get(i).get(0).getAvl().insertar(test, cont,fecha,Tabla_hash.get(Login).getUser());
        break;
        }
        }
        // reload jtree model
        DefaultTreeModel model = (DefaultTreeModel)jTree1.getModel();
        model.reload();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed

    ReporteTablaHash();
    GenerarImagen("TablaHash");
        try {
        try {
            sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
            AbrirImagen("TablaHash");
        } catch (IOException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
    JFileChooser file1=new JFileChooser();
    file1.showOpenDialog(this);
    File file = file1.getSelectedFile(); 
    String select = file.getAbsolutePath(); 
        try {
            leerUser(select);
            // TODO add your handling code here:
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (CsvValidationException ex) {
            ex.printStackTrace();
        }
        for(int i=0;i<UpUser.size();i++){
        String contra = UpPass.get(i);
        String separado[];
        separado = contra.split("");
        String passE = sha_256(UpPass.get(i));
        if(separado.length>7){
        boolean re=buscar(UpUser.get(i));
        if (re==false){    
        insertarUser(UpUser.get(i), passE);
        }else{
        Problemas.add("Usuario: "+UpUser.get(i)+" Contraseña: "+UpPass.get(i)+" Error: Usuario Repetido");
        }
        }else{
        Problemas.add("Usuario: "+UpUser.get(i)+" Contraseña: "+UpPass.get(i)+" Error: Contraseña menor a 8 caracteres");
        }
        }
        System.out.println(imprimir());
        for(int i=0;i<Problemas.size();i++){
        System.out.println(Problemas.get(i));
        }
        JOptionPane.showMessageDialog(null, "Carga Completa");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
    ReporteMatriz();
    GenerarImagen("Matriz");
        try {
        try {
            sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
            AbrirImagen("Matriz");
        } catch (IOException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        for(int i =0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre().equalsIgnoreCase(SelectActual)){
        Tabla_hash.get(Login).getCarpetas().get(i).get(0).getAvl().ReporteArbol();
        break;
        }
        }
        GenerarImagen("Arbol");
        try {
            sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            AbrirImagen("Arbol");
        } catch (IOException ex) {
            Logger.getLogger(PantallaUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
    static ArrayList<String> UpUser= new ArrayList();
    static ArrayList<String> UpPass= new ArrayList();
    static ArrayList<String> Problemas= new ArrayList();
    String SelectActual="/";
    static String[] fila = null;
    static ArrayList<String> Titulo= new ArrayList();
    static ArrayList<String> Contenido= new ArrayList();
    DefaultMutableTreeNode selectNodo;

  public String fecha(){
    LocalDateTime myDateObj = LocalDateTime.now();  
    DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");  
    String formattedDate = myDateObj.format(myFormatObj);  
    return formattedDate;
  }
    public static void leer(String archivo) throws FileNotFoundException, IOException, CsvValidationException{
    fila = null;
    Contenido.clear();
    Titulo.clear();
    String archCSV = archivo;
    CSVReader csvReader = new CSVReader(new FileReader(archCSV));
    int i=0;
    while((fila = csvReader.readNext()) != null) {
        if(i>0){
            Titulo.add(fila[0]);
            Contenido.add(fila[1]);
        }
        i++;
    }
    csvReader.close();
    }
    public void insertar(String test,String cont){
        String fecha = fecha();
        DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(test);
        selectNodo.add(newNode);
        for(int i =0;i<Tabla_hash.get(Login).getCarpetas().size();i++){
        if(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre().equalsIgnoreCase(SelectActual)){
        Tabla_hash.get(Login).getCarpetas().get(i).get(0).getAvl().insertar(test, cont,fecha,Tabla_hash.get(Login).getUser());
        break;
        }
        }
        // reload jtree model
        DefaultTreeModel model = (DefaultTreeModel)jTree1.getModel();
        model.reload();
    }
    public boolean buscar(String user){
  boolean existe=false;
  Iterator<Usuario> itrUsuario = Tabla_hash.iterator();
  int i=0;
  while(itrUsuario.hasNext()){
  Usuario Table = itrUsuario.next();
  if(Tabla_hash.get(i)==null){
  
  }else{
  if(user.equalsIgnoreCase(Table.getUser())){
  existe=true;
  }
  }
  i++;
  }
  return existe;
  }
    public static void leerUser(String archivo) throws FileNotFoundException, IOException, CsvValidationException{
    fila = null;
    UpUser.clear();
    UpPass.clear();
    String archCSV = archivo;
    CSVReader csvReader = new CSVReader(new FileReader(archCSV));
    int i=0;
    while((fila = csvReader.readNext()) != null) {
        if(i>0){
        UpUser.add(fila[0]);
        UpPass.add(fila[1]);
        }
        i++;
    }
    csvReader.close();
    }
    public String imprimir(){
    String Lista="";
   for(int i=0;i<Tabla_hash.size();i++){
    if(Tabla_hash.get(i)==null){
    Lista= Lista +(i)+" "+"null";
   Lista = Lista + " \n ";
    }else{
   Lista= Lista +(i)+" "+"Nombre: "+Tabla_hash.get(i).getUser()+" Contraseña:"+Tabla_hash.get(i).getPass();
   Lista = Lista + " \n ";
    }
   }
   Lista = Lista + "";
   return Lista;
   }
    public String sha_256(String key){
            MessageDigest md = null;
            String key_sha256 = (String)key;
        try {            
            md = MessageDigest.getInstance("SHA-256");
            md.reset();
            md.update(key_sha256.getBytes("utf8"));
            key_sha256 = String.format("%064x", new BigInteger(1 , md.digest()));
            return key_sha256;
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (UnsupportedEncodingException e){
        e.printStackTrace();
        }
      return "";
  }
    public void insertarUser (String p,String p2) {
     //-------------
        List<List<Matriz_Ad>> CarpetaRaiz =new ArrayList<List<Matriz_Ad>>();
        for(int i=0;i<20;i++){
        CarpetaRaiz.add(new ArrayList<Matriz_Ad>());
        for(int j=0;j<20;j++){
        CarpetaRaiz.get(i).add(new Matriz_Ad(null,new Arbol()));
        }
        }
        CarpetaRaiz.get(0).set(0,new Matriz_Ad("0",new Arbol()));
        CarpetaRaiz.get(0).set(1,new Matriz_Ad("/",new Arbol())); 
        CarpetaRaiz.get(1).set(0,new Matriz_Ad("/",new Arbol()));
        CarpetaRaiz.get(1).set(1,new Matriz_Ad(null,new Arbol()));
     //-------------
    String time=fecha();
     int pos = this.Hash(p);
     if(Tabla_hash.get(pos)==null){
     Tabla_hash.set(pos, new Usuario(p,p2,pos,time,CarpetaRaiz));
     cambiar++;
    }else{
     System.out.println("Colision "+pos);
     if(pos==1 || pos==0){
     pos=pos+2;
     }
     int k=0;
     while(Tabla_hash.get(pos)!=null){
     pos=(pos*pos)+k;
     while(pos>tamanio_hash-1){
     pos=pos-(tamanio_hash);
     }
     k++;
     }
     Tabla_hash.set(pos,new Usuario(p,p2,pos,time,CarpetaRaiz));
     cambiar++;
     }
     if(cambiar>(tamanio_hash*0.75)){
     System.out.println("Ya cambio");
     tamanio_hash+=Tabla_francisco.get(tam);
     for(int i=0;i<Tabla_francisco.get(tam);i++){
     Tabla_hash.add(null);
     }
     tam++;
     }
     }
    private static int Hash(String Clave) {            
     int valor = Clave.charAt(0);
     int tam = Clave.length();
     for (int i = 1; i < tam ;i++) {
     valor += Character.getNumericValue( Clave.charAt(i));
     }
     return (valor % tamanio_hash);
     }
    
public void GenerarImagen(String name){
try {
      String dotPath="";
      if(name=="Matriz"){
      dotPath = "..\\neato.exe";
      }else{
      dotPath = "..\\dot.exe";
      }
      String fileInputPath = "..\\REPORTES\\"+name+".txt";
      String fileOutputPath = "..\\REPORTES\\"+name+".jpg";
      
      String tParam = "-Tjpg";
      String tOParam = "-o";
        
      String[] cmd = new String[5];
      cmd[0] = dotPath;
      cmd[1] = tParam;
      cmd[2] = fileInputPath;
      cmd[3] = tOParam;
      cmd[4] = fileOutputPath;
                  
      Runtime rt = Runtime.getRuntime();
      
      rt.exec( cmd );
      
    } catch (Exception ex) {
      ex.printStackTrace();
    } finally {
    }
}
public void AbrirImagen(String ruta) throws IOException{
    File f = new File("..\\REPORTES\\"+ruta+".jpg");
    Desktop dt = Desktop.getDesktop();
    dt.open(f);
}

public void ReporteTablaHash(){
    try {
            String ruta = "..\\REPORTES\\TablaHash.txt";
            String num="";
            String data="";
            for(int i=0;i<Tabla_hash.size();i++){
            if(Tabla_hash.get(i)!=null){
            if(i<1){
            num+=""+i+")";
            data+="Nombre: "+Tabla_hash.get(i).getUser()+"\\nContraseña: "+Tabla_hash.get(i).getPass()+"\\nTimestamp: "+Tabla_hash.get(i).getTime();
            }else{
            num+="| "+i+")";
            data+="| Nombre: "+Tabla_hash.get(i).getUser()+"\\nContraseña: "+Tabla_hash.get(i).getPass()+"\\nTimestamp: "+Tabla_hash.get(i).getTime();
            }
            }else{
            if(i<1){
            num+=""+i+")";
            data+="Nombre: \\nContraseña: \\nTimestamp: ";
            }else{
            num+="| "+i+")";
            data+="| Nombre: \\nContraseña: \\nTimestamp: ";
            }        
            }
            }
            String contenido="digraph G {\n" +
            "		node [shape = record];\n" +
            "    2[label=\"{"+num+"}|{"+data+"}\"];\n"+
            "}";
            File file = new File(ruta);
            // Si el archivo no existe es creado
            if (!file.exists()) {
                file.createNewFile();
            }
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(contenido);
            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
}

public void ReporteMatriz(){
    try {
            String ruta = "..\\REPORTES\\Matriz.txt";
            String resto="";
            String enlace="";
            String enlace2="";
            int size=TamañoMatriz();
            int id=0;
            for(int i=0;i<size;i++){
            for(int j=0;j<size;j++){
            if(Tabla_hash.get(Login).getCarpetas().get(j).get(i).getNombre()!=null){
            if(j==0){
            resto+="p"+id+"[label=\""+Tabla_hash.get(Login).getCarpetas().get(j).get(i).getNombre()+"\"pos=\""+i+",-"+j+"!\"];\n";
            enlace+="p"+id;
            }else{
            resto+="p"+id+"[label=\""+Tabla_hash.get(Login).getCarpetas().get(j).get(i).getNombre()+"\"pos=\""+i+",-"+j+"!\"];\n";
            enlace+="->"+"p"+id;
            }
            }
            id++;
            }
            enlace+=";";
            }
            id=0;
            for(int i=0;i<size;i++){
            for(int j=0;j<size;j++){
            if(Tabla_hash.get(Login).getCarpetas().get(i).get(j).getNombre()!=null){
            if(j==0){
            enlace2+="p"+id;
            }else{
            enlace2+="->"+"p"+id;
            }
            }
            id+=size;
            }
            id=i+1;
            enlace2+=";";
            }    
            String contenido="digraph G {\n" +
            "node[shape=record];\n" +
            "graph[pencolor=transparent];\n" +
            resto+"\n" +
                    enlace+"\n"+
                    enlace2+"\n"+
            "}";
            File file = new File(ruta);
            // Si el archivo no existe es creado
            if (!file.exists()) {
                file.createNewFile();
            }
            FileWriter fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(contenido);
            bw.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
}

public int TamañoMatriz(){
    int i=0;
    while(Tabla_hash.get(Login).getCarpetas().get(i).get(0).getNombre()!=null){   
        i++;
    }
    return i;
}

}
