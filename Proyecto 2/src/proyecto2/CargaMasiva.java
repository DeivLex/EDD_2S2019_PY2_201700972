/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import com.opencsv.CSVReader;
import com.opencsv.exceptions.CsvValidationException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static proyecto2.Proyecto2.Tabla_francisco;
import static proyecto2.Proyecto2.Tabla_hash;
import static proyecto2.Proyecto2.tamanio_hash;

/**
 *
 * @author Davis
 */
public class CargaMasiva extends javax.swing.JFrame {
    /**
     * Creates new form CargaMasiva
     */
    public CargaMasiva() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
    File file = jFileChooser1.getSelectedFile(); 
    String select = file.getAbsolutePath(); 
        try {
            leer(select);
            this.dispose();
            // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CsvValidationException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=0;i<UpUser.size();i++){
        String contra = UpPass.get(i);
        String separado[];
        separado = contra.split("");
        if(separado.length>7){
        boolean re=buscar(UpUser.get(i));
        if (re==false){    
        insertar(UpUser.get(i), UpPass.get(i));
        }else{
        Problemas.add("Usuario: "+UpUser.get(i)+" Contrase単a: "+UpPass.get(i)+" Error: Usuario Repetido");
        }
        }else{
        Problemas.add("Usuario: "+UpUser.get(i)+" Contrase単a: "+UpPass.get(i)+" Error: Contrase単a menor a 8 caracteres");
        }
        }
        System.out.println(imprimir());
        for(int i=0;i<Problemas.size();i++){
        System.out.println(Problemas.get(i));
        }
        JOptionPane.showMessageDialog(null, "Carga Completa");
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargaMasiva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CargaMasiva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables
    static ArrayList<String> UpUser= new ArrayList();
    static ArrayList<String> UpPass= new ArrayList();
    static ArrayList<String> Problemas= new ArrayList();
    static String[] fila = null;
    public static void leer(String archivo) throws FileNotFoundException, IOException, CsvValidationException{
    String archCSV = archivo;
    CSVReader csvReader = new CSVReader(new FileReader(archCSV));
    int i=0;
    while((fila = csvReader.readNext()) != null) {
        if(i>0){
        UpUser.add(fila[0]);
        UpPass.add(fila[1]);
        }
        i++;
    }
    csvReader.close();
    }
        int cambiar=1;
    int tam=0;
    private static int Hash(String Clave) {            
     int valor = Clave.charAt(0);
     int tam = Clave.length();
     for (int i = 1; i < tam ;i++) {
     valor += Character.getNumericValue( Clave.charAt(i));
     }
     return (valor % tamanio_hash);
     }

     public void insertar (String p,String p2) {
         String time=fecha();
     int pos = this.Hash(p);
     if(Tabla_hash.get(pos)==null){
     Tabla_hash.set(pos, new Usuario(p,p2,pos,time));
     cambiar++;
    }else{
     System.out.println("Colision "+pos);
     if(pos==1 || pos==0){
     pos=pos+2;
     }
     while(Tabla_hash.get(pos)!=null){
     pos=(pos*pos);
     while(pos>tamanio_hash){
     pos=pos-(tamanio_hash);
     }
     }
     Tabla_hash.set(pos,new Usuario(p,p2,pos,time));
     cambiar++;
     }
     if(cambiar>(tamanio_hash*0.5)){
     System.out.println("Ya cambio");
     tamanio_hash+=Tabla_francisco.get(tam);
     for(int i=0;i<Tabla_francisco.get(tam);i++){
     Tabla_hash.add(null);
     }
     tam++;
     }
     }
        public String imprimir(){
    String Lista="";
   for(int i=0;i<Tabla_hash.size();i++){
    if(Tabla_hash.get(i)==null){
    Lista= Lista +(i)+" "+"null";
   Lista = Lista + " \n ";
    }else{
   Lista= Lista +(i)+" "+"Nombre: "+Tabla_hash.get(i).getUser()+" Contrase単a:"+Tabla_hash.get(i).getPass();
   Lista = Lista + " \n ";
    }
   }
   Lista = Lista + "";
   return Lista;
   }
  public boolean buscar(String user){
  boolean existe=false;
  Iterator<Usuario> itrUsuario = Tabla_hash.iterator();
  int i=0;
  while(itrUsuario.hasNext()){
  Usuario Table = itrUsuario.next();
  if(Tabla_hash.get(i)==null){
  
  }else{
  if(user.equalsIgnoreCase(Table.getUser())){
  existe=true;
  }
  }
  i++;
  }
  return existe;
  }
    public String fecha(){
    LocalDateTime myDateObj = LocalDateTime.now();  
    DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");  
    String formattedDate = myDateObj.format(myFormatObj);  
    return formattedDate;
  }
}
